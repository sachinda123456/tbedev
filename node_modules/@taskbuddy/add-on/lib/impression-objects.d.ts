import { TBAPI } from './tb-api';
export interface IAddOnImpressionObject {
    id: string;
}
export interface ITBAddOnButton extends IAddOnImpressionObject {
    type: 'button';
    title: string;
    onClick: (tbapi: TBAPI) => Promise<void>;
}
export interface ITBAddOnIconLabel extends IAddOnImpressionObject {
    type: 'icon-label';
    title: string;
    icon: string;
}
export interface ITBAddOnLabel extends IAddOnImpressionObject {
    type: 'label';
    title: string;
}
export interface ITBAddOnMarkdown extends IAddOnImpressionObject {
    type: 'markdown-text';
    value: string;
    placeholder?: string;
}
export interface ITBAddOnTextInput extends IAddOnImpressionObject {
    type: 'text-input';
    placeholder?: string;
    value: string;
    onChange: (tbapi: TBAPI, values: string[]) => Promise<void>;
}
export interface ITBAddOnSwitch extends IAddOnImpressionObject {
    type: 'switch';
    title: string;
    value: boolean;
    onChange: (tbapi: TBAPI, values: string[]) => Promise<void>;
}
export interface ITBAddOnSelect extends IAddOnImpressionObject {
    type: 'select';
    placeholder: string;
    options: {
        value: string;
        label: string;
    }[];
    value: string;
    onChange: (tbapi: TBAPI, values: string) => Promise<void>;
}
export interface ITBAddOnMultiSelect extends IAddOnImpressionObject {
    type: 'multi-select';
    placeholder: string;
    options: {
        value: string;
        label: string;
    }[];
    values: string[];
    onChange: (tbapi: TBAPI, values: string[]) => Promise<void>;
}
export interface ITBAddOnBadge extends IAddOnImpressionObject {
    type: 'badge';
    label: string;
    color: 'red' | 'green' | 'blue';
    icon?: string;
    onClick?: (tbapi: TBAPI) => Promise<void>;
}
export declare type ITBAddOnObject = ITBAddOnButton | ITBAddOnIconLabel | ITBAddOnLabel | ITBAddOnSelect | ITBAddOnSwitch | ITBAddOnTextInput | ITBAddOnMultiSelect | ITBAddOnMarkdown | ITBAddOnBadge;
